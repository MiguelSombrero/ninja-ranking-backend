version: '3'  

services: 
    frontend: 
      image: ninja-front
      build:
        context: ../ninja-ranking-frontend
        dockerfile: Dockerfile
      command: npm start
      ports: 
        - 3000:3000
      environment:
        - CHOKIDAR_USEPOLLING=true
      volumes:
        - ../ninja-ranking-frontend/:/app
      container_name: ninja-front
      depends_on: 
        - backend

    backend: 
      image: ninja-back
      build:
        context: ./
        dockerfile: Dockerfile
      command: npm run watch
      ports: 
        - 3001:3001
      environment:
        - DATABASE_URL=postgresql://postgres:example@db:5432/postgres
        - TEST_DATABASE_URL=postgresql://postgres:example@test-db:5432/postgres
        - PORT=3001
        - SECRET=erittainsalainenstringi
      volumes:
        - ./controllers/:/app/controllers/
        - ./db/:/app/db/
        - ./services/:/app/services/
        - ./tests/:/app/tests/
      container_name: ninja-back
      depends_on:
        - db

    db:
      image: postgres
      restart: unless-stopped
      environment:
        - POSTGRES_PASSWORD=example
      volumes:
        - ./data:/var/lib/postgresql/data
        - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      container_name: ninja-db

    test-db:
      image: postgres
      restart: unless-stopped
      environment:
        - POSTGRES_PASSWORD=example
      volumes:
        - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
      container_name: ninja-testdb

    web:
      image: nginx
      ports:
        - 80:80
      volumes:
        - ./nginx.dev.conf:/etc/nginx/nginx.conf
      depends_on:
        - backend
        - frontend
      container_name: ninja-proxy