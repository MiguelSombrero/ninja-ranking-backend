{"version":3,"sources":["hooks/index.js","reducers/loginReducer.js","reducers/tournamentsReducer.js","reducers/playersReducer.js","components/NavigationBar.js","components/NinjaButton.js","components/LoginForm.js","components/NinjaBanner.js","components/TournamentOverview.js","components/FrontPage.js","reducers/accountsReducer.js","components/RegisterForm.js","components/TournamentForm.js","components/Tournaments.js","components/Footer.js","reducers/obstaclesReducer.js","components/ObstacleForm.js","components/PlayerForm.js","components/NavigationSidePanel.js","components/ResultTableRow.js","components/ObstacleTableRow.js","components/ResultsTable.js","components/Tournament.js","reducers/resultsReducer.js","components/AddResult.js","components/ManageTournament.js","components/About.js","App.js","store.js","index.js"],"names":["token","setToken","newToken","useResource","baseUrl","getAll","a","axios","get","res","data","create","resource","config","headers","Authorization","post","login","credentials","update","id","put","useTextField","type","minLength","maxLength","required","useState","value","setValue","validationMessage","setValidationMessage","onChange","event","target","onInvalid","loginService","loginUser","dispatch","user","window","localStorage","setItem","JSON","stringify","loginReducer","state","action","tournamentService","createTournament","tournament","newTournament","updateTournament","updatedTournament","updateTournamentState","tournamentsReducer","tournaments","map","t","playerService","createPlayer","player","newPlayer","updatePlayer","updatedPlayer","playersReducer","players","p","withRouter","useDispatch","Row","Navbar","as","Col","collapseOnSelect","expand","style","backgroundColor","Toggle","aria-controls","Collapse","Nav","className","Link","href","to","onClick","removeItem","exception","console","log","smooth","NinjaButton","text","props","validated","setValidated","username","usernameErrors","password","passwordErrors","handleLogin","preventDefault","checkValidity","history","push","Form","noValidate","onSubmit","Group","Label","Control","placeholder","Feedback","xs","md","NinjaBanner","Jumbotron","fluid","TournamentOverview","borderTop","name","sm","moment","created","format","color","active","FrontPage","activeTournaments","filter","Image","src","width","height","key","accountsService","registerAccount","account","newAccount","accountsReducer","nameErrors","handleRegister","handleCreateTournament","Tournaments","showPastTournaments","SetShowPastTournaments","pastTournaments","renderTournaments","Footer","obstacleService","createObstacle","obstacle","newObstacle","obstaclesReducer","obstacles","setName","handleCreateObstacle","tournament_id","savedObstacle","PlayerForm","nickname","nicknameErrors","setNickname","handleCreatePlayer","NavigationSidePanel","handleShowAddResult","handleEndTournament","ResultTableRow","result","o","passed_obstacles","includes","obstacleIsPassed","time","ObstacleTableRow","results","passedRatio","Math","round","length","passedCount","Results","Object","assign","flat","sort","r1","r2","Table","striped","bordered","hover","responsive","renderObstacles","ListGroup","Item","renderPlayers","span","offset","variant","ResultsTable","resultService","createResult","newResult","resultsReducer","AddResult","show","close","currentPlayer","setCurrentPlayer","setTime","passedObstacles","setPassedObstacles","isPassed","handleSaveResult","player_id","savedResult","Modal","onHide","centered","Header","closeButton","Title","Body","find","Check","label","checked","Number","handleSetPassedObstacle","ManageTournament","showAddResult","setShowAddResult","tournamentId","useParams","useSelector","About","App","useEffect","logged","getItem","parse","loggedUser","tournamentsByLoggedUser","account_id","Container","NavigationBar","path","position","bottom","right","zIndex","reducer","combineReducers","accounts","store","createStore","applyMiddleware","thunk","ReactDOM","render","Provider","size","document","getElementById"],"mappings":"2TAGIA,EAAQ,KAECC,EAAW,SAAAC,GACtBF,EAAK,iBAAaE,IAGPC,EAAc,SAACC,GAE1B,IAAMC,EAAM,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAIJ,GADf,cACPK,EADO,yBAENA,EAAIC,MAFE,2CAAH,qDAKNC,EAAM,uCAAG,WAAOC,GAAP,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CACPC,cAAef,IAHN,SAMKO,IAAMS,KAAKZ,EAASQ,EAAUC,GANnC,cAMPJ,EANO,yBAONA,EAAIC,MAPE,2CAAH,sDAUNO,EAAK,uCAAG,WAAOC,GAAP,eAAAZ,EAAA,sEACMC,IAAMS,KAAKZ,EAASc,GAD1B,cACNT,EADM,yBAELA,EAAIC,MAFC,2CAAH,sDAeX,MAAQ,CACNC,SAAQN,SAAQc,OAXN,uCAAG,WAAOC,EAAIR,GAAX,iBAAAN,EAAA,6DACPO,EAAS,CACbC,QAAS,CACPC,cAAef,IAHN,SAMKO,IAAMc,IAAN,UAAajB,EAAb,YAAwBgB,GAAMR,EAAUC,GAN7C,cAMPJ,EANO,yBAONA,EAAIC,MAPE,2CAAH,wDAWcO,UAIfK,EAAe,SAACC,EAAMC,EAAWC,GAAiC,IAAtBC,EAAqB,0DAClDC,mBAAS,IADyC,mBACrEC,EADqE,KAC9DC,EAD8D,OAE1BF,mBAAS,IAFiB,mBAErEG,EAFqE,KAElDC,EAFkD,KAItEC,EAAW,SAACC,GAChBJ,EAASI,EAAMC,OAAON,QAGlBO,EAAY,WAChBJ,EAAqB,wBAA0BP,EAAY,IAAMC,EAAY,gBAG/E,MAAO,CACL,CACEF,OACAC,YACAC,YACAC,WACAE,QACAI,WACAG,aAEFL,EACAD,ICnEEO,EAAejC,EAAY,cAapBkC,EAAY,SAACnB,GACxB,8CAAO,WAAMoB,GAAN,eAAAhC,EAAA,sEACc8B,EAAanB,MAAMC,GADjC,OACCqB,EADD,OAGLC,OAAOC,aAAaC,QAAQ,yBAA0BC,KAAKC,UAAUL,IACrEtC,EAASsC,EAAKvC,OAEdsC,EAAS,CACPf,KAAM,QACNgB,SARG,2CAAP,mDAAM,IAmCOM,EA/CM,WAA2B,IAA1BC,EAAyB,uDAAjB,KAAMC,EAAW,uCAC7C,OAAQA,EAAOxB,MACf,IAAK,QACH,OAAOwB,EAAOR,KAChB,IAAK,SACH,OAAO,KACT,QACE,OAAOO,I,QCTLE,EAAoB7C,EAAY,oBA0BzB8C,EAAmB,SAACC,GAC/B,8CAAO,WAAMZ,GAAN,eAAAhC,EAAA,sEACuB0C,EAAkBrC,OAAOuC,GADhD,OACCC,EADD,OAGLb,EAAS,CACPf,KAAM,oBACN4B,kBALG,2CAAP,mDAAM,IAUKC,EAAmB,SAACF,GAC/B,8CAAO,WAAMZ,GAAN,eAAAhC,EAAA,sEAC2B0C,EAAkB7B,OAAO+B,EAAW9B,GAAI8B,GADnE,OACCG,EADD,OAELf,EAASgB,EAAsBD,IAF1B,2CAAP,mDAAM,IAMKC,EAAwB,SAAAD,GACnC,MAAO,CACL9B,KAAM,oBACN8B,sBAIWE,EAjDY,WAAyB,IAAxBT,EAAuB,uDAAf,GAAIC,EAAW,uCACjD,OAAQA,EAAOxB,MACf,IAAK,kBACH,OAAOwB,EAAOS,YAChB,IAAK,oBACH,MAAM,GAAN,mBAAWV,GAAX,CAAkBC,EAAOI,gBAC3B,IAAK,oBACH,OAAOL,EAAMW,KAAI,SAAAC,GAAC,OAAIA,EAAEtC,KAAO2B,EAAOM,kBAAkBjC,GAAK2B,EAAOM,kBAAoBK,KAC1F,QACE,OAAOZ,ICXLa,EAAgBxD,EAAY,gBA0BrByD,EAAe,SAAAC,GAC1B,8CAAO,WAAMvB,GAAN,eAAAhC,EAAA,sEACmBqD,EAAchD,OAAOkD,GADxC,OACCC,EADD,OAGLxB,EAAS,CACPf,KAAM,gBACNuC,cALG,2CAAP,mDAAM,IAUKC,EAAe,SAAAC,GAC1B,MAAO,CACLzC,KAAM,gBACNyC,kBAIWC,EA1CQ,WAAyB,IAAxBnB,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOxB,MACf,IAAK,cACH,OAAOwB,EAAOmB,QAChB,IAAK,gBACH,MAAM,GAAN,mBAAWpB,GAAX,CAAkBC,EAAOe,YAC3B,IAAK,gBACH,OAAOhB,EAAMW,KAAI,SAAAU,GAAC,OAAIA,EAAE/C,KAAO2B,EAAOiB,cAAc5C,GAAK2B,EAAOiB,cAAgBG,KAClF,QACE,OAAOrB,I,oDCoDIsB,eAxDI,SAAC,GAAc,IAAZ7B,EAAW,EAAXA,KACdD,EAAW+B,cAUjB,OACE,kBAACC,EAAA,EAAD,CAAKlD,GAAG,OACN,kBAACmD,EAAA,EAAD,CAAQC,GAAIC,IAAKC,kBAAgB,EAACC,OAAO,KAAKC,MAAO,CAAEC,gBAAiB,uBACtE,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,0BAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiB5D,GAAG,yBAClB,kBAAC6D,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,UAAD,CAASa,GAAG,KAAK,kBAAC,IAAD,SAIpB9C,GACC,oCACE,kBAAC0C,EAAA,EAAD,CAAKC,UAAU,kCACb,kBAACD,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,UAAD,CAASa,GAAG,gBAAZ,uBAEF,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,UAAD,CAASa,GAAG,eAAZ,2BAGJ,kBAACJ,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,UAAD,CAASa,GAAG,IAAIC,QA/BX,WACnB,IACEhD,EHgBJ,uCAAO,WAAMA,GAAN,SAAAhC,EAAA,sDACLkC,OAAOC,aAAa8C,WAAW,0BAC/BtF,EAAS,MAETqC,EAAS,CACPf,KAAM,WALH,2CAAP,mDAAM,IGfF,MAAOiE,GACPC,QAAQC,IAAI,0BAA2BF,MA2B3B,cAMNjD,GACA,kBAAC0C,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,WAAD,CAAUmB,QAAM,EAACN,GAAG,eAApB,UAEF,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,KAAK,IAAIZ,GAAG,QACpB,kBAAC,UAAD,CAASa,GAAG,aAAZ,0B,kBCrCDO,EAfK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAmC,IAA7BtE,YAA6B,MAAxB,SAAwB,EAAd+D,EAAc,EAAdA,QAC1C,OACE,2BACEJ,UAAU,eACV3D,KAAMA,EACNK,MAAOiE,EACPP,QAASA,KC+DAlB,eA/DG,SAAC0B,GACjB,IAAMxD,EAAW+B,cADU,EAEO1C,oBAAS,GAFhB,mBAEpBoE,EAFoB,KAETC,EAFS,OAGQ1E,EAAa,OAAQ,EAAG,IAAI,GAHpC,mBAGpB2E,EAHoB,KAGVC,EAHU,OAIQ5E,EAAa,WAAY,EAAG,IAAI,GAJxC,mBAIpB6E,EAJoB,KAIVC,EAJU,KAMrBC,EAAW,uCAAG,WAAOpE,GAAP,SAAA3B,EAAA,yDAClB2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHA,uBAIhBP,GAAa,GAJG,0BAQlB,IACE1D,EAASD,EAAU,CACjB4D,SAAUA,EAASrE,MACnBuE,SAAUA,EAASvE,SAGrBkE,EAAMU,QAAQC,KAAK,KAEnB,MAAOjB,GACPC,QAAQC,IAAI,eAAgBF,GAjBZ,2CAAH,sDAqBjB,OACE,kBAAClB,EAAA,EAAD,CAAKlD,GAAG,aACN,kBAACqD,EAAA,EAAD,KACE,wBAAIS,UAAU,oBAAd,0BAGA,kBAACwB,EAAA,EAAD,CAAMxB,UAAU,OAAOyB,YAAU,EAACZ,UAAWA,EAAWa,SAAUP,GAChE,kBAACK,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBd,EAAlB,CAA4Be,YAAY,cACxC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAY2E,IAE1C,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBZ,EAAlB,CAA4Ba,YAAY,cACxC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAY6E,IAE1C,kBAAC,EAAD,CAAaP,KAAK,UAClB,kBAACa,EAAA,EAAKpC,IAAN,KACE,kBAACG,EAAA,EAAD,CAAKyC,GAAI,GAAIC,GAAI,GACf,2BAAOjC,UAAU,cACf,kBAAC,OAAD,CAAMG,GAAG,aAAT,wBAGJ,kBAACZ,EAAA,EAAD,CAAKyC,GAAI,GAAIC,GAAI,GACf,2BAAOjC,UAAU,eACf,kBAAC,OAAD,CAAMG,GAAG,aAAT,mC,SC5CD+B,EAfK,SAAC,GAA6B,IAA3BvB,EAA0B,EAA1BA,KAA0B,IAApBtE,YAAoB,MAAf,SAAe,EAC/C,OACE,kBAAC+C,EAAA,EAAD,KACE,kBAAC+C,EAAA,EAAD,CAAW7C,GAAIC,IACb6C,OAAK,EACLpC,UAAoB,WAAT3D,EAAoB,eAAiB,qBAEhD,4BACGsE,M,iBCqBI0B,EA3BY,SAAC,GAAoB,IAAlBrE,EAAiB,EAAjBA,WAE5B,OACE,oCACE,kBAACoB,EAAA,EAAD,CAAKM,MAAO,CAAE4C,UAAW,wBACvB,kBAAC/C,EAAA,EAAD,KACE,kBAAC,UAAD,CAASY,GAAE,uBAAkBnC,EAAW9B,KACtC,4BAAK8B,EAAWuE,SAItB,kBAACnD,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,GACf,wBAAIxC,UAAU,cAAd,cACcyC,IAAOzE,EAAW0E,SAASC,OAAO,kBAGlD,kBAACpD,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,GACf,wBAAIxC,UAAU,cAAcN,MAAO,CAAEkD,MAAO5E,EAAW6E,OAAS,QAAU,QACvE7E,EAAW6E,OAAS,SAAW,gBCuB7BC,EAzCG,SAAC,GAA2B,IAAzBzF,EAAwB,EAAxBA,KAEb0F,EAFqC,EAAlBzE,YAEa0E,QAAO,SAAAxE,GAAC,OAAIA,EAAEqE,UAYpD,OACE,kBAACzD,EAAA,EAAD,CAAKY,UAAU,0BACb,kBAACiD,EAAA,EAAD,CAAOb,OAAK,EACVc,IAAI,4BACJxD,MAAO,CAAEyD,MAAO,OAAQC,OAAQ,WAGhC/F,GACA,kBAAC,EAAD,MAGDA,GACC,kBAACkC,EAAA,EAAD,KACE,kBAAC,EAAD,CACEoB,KAAI,uBAAkBtD,EAAKkF,QAE7B,kBAACnD,EAAA,EAAD,CAAKY,UAAU,0BACb,yEA1BR,kBAACT,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,EAAGxC,UAAU,QAC3B+C,EAAkBxE,KAAI,SAAAC,GAAC,OACtB,kBAAC,EAAD,CACE6E,IAAK7E,EAAEtC,GACP8B,WAAYQ,YCbhB8E,EAAkBrI,EAAY,iBAWvBsI,EAAkB,SAAAC,GAC7B,8CAAO,WAAMpG,GAAN,eAAAhC,EAAA,sEACoBkI,EAAgB7H,OAAO+H,GAD3C,OACCC,EADD,OAGLrG,EAAS,CACPf,KAAM,mBACNoH,eALG,2CAAP,mDAAM,IAUOC,EApBS,WAAyB,IAAxB9F,EAAuB,uDAAf,GAAIC,EAAW,uCAC9C,OAAQA,EAAOxB,MACf,IAAK,mBACH,MAAM,GAAN,mBAAWuB,GAAX,CAAkBC,EAAO4F,aAC3B,QACE,OAAO7F,IC4DIsB,gBA5DM,SAAC0B,GACpB,IAAMxD,EAAW+B,cADa,EAEI1C,oBAAS,GAFb,mBAEvBoE,EAFuB,KAEZC,EAFY,OAGK1E,EAAa,OAAQ,EAAG,IAAI,GAHjC,mBAGvB2E,EAHuB,KAGbC,EAHa,OAIK5E,EAAa,WAAY,EAAG,IAAI,GAJrC,mBAIvB6E,EAJuB,KAIbC,EAJa,OAKH9E,EAAa,OAAQ,EAAG,IAAI,GALzB,mBAKvBmG,EALuB,KAKjBoB,EALiB,KAOxBC,EAAc,uCAAG,WAAO7G,GAAP,SAAA3B,EAAA,yDACrB2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHG,uBAInBP,GAAa,GAJM,0BAQrB,IACE1D,EAASmG,EAAgB,CACvBxC,SAAUA,EAASrE,MACnBuE,SAAUA,EAASvE,MACnB6F,KAAMA,EAAK7F,SAGbkE,EAAMU,QAAQC,KAAK,UAEnB,MAAOjB,GACPC,QAAQC,IAAI,4BAA6BF,GAlBtB,2CAAH,sDAsBpB,OACE,oCACE,kBAAC,EAAD,CACEK,KAAK,6BAEP,kBAACvB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKS,UAAU,QACb,kBAACwB,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAAUkC,GAC/C,kBAACpC,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBU,EAAlB,CAAwBT,YAAY,UACpC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAYsH,IAE1C,kBAACnC,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBd,EAAlB,CAA4Be,YAAY,cACxC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAY2E,IAE1C,kBAACQ,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBZ,EAAlB,CAA4Ba,YAAY,cACxC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAY6E,IAE1C,kBAAC,EAAD,CAAaP,KAAK,oBCNfzB,gBA9CQ,SAAC0B,GACtB,IAAMxD,EAAW+B,cADe,EAEE1C,oBAAS,GAFX,mBAEzBoE,EAFyB,KAEdC,EAFc,OAGL1E,EAAa,OAAQ,EAAG,IAAI,GAHvB,mBAGzBmG,EAHyB,KAGnBoB,EAHmB,KAK1BE,EAAsB,uCAAG,WAAO9G,GAAP,SAAA3B,EAAA,yDAC7B2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHW,uBAI3BP,GAAa,GAJc,0BAQ7B,IACE1D,EAASW,EAAiB,CACxBwE,KAAMA,EAAK7F,SAGbkE,EAAMU,QAAQC,KAAK,gBAEnB,MAAOjB,GACPC,QAAQC,IAAI,kCAAmCF,GAhBpB,2CAAH,sDAoB5B,OACE,oCACE,kBAAC,EAAD,CACEK,KAAK,4BAEP,kBAACvB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKS,UAAU,QACb,kBAACwB,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAAUmC,GAC/C,kBAACrC,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,+BACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBU,EAAlB,CAAwBT,YAAY,UACpC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAYsH,IAE1C,kBAAC,EAAD,CAAahD,KAAK,6BCKfmD,GA9CK,SAAC,GAAqB,IAAnBxF,EAAkB,EAAlBA,YAAkB,EACe7B,oBAAS,GADxB,mBAChCsH,EADgC,KACXC,EADW,KAGvC,IAAK1F,EACH,OAAO,KAGT,IAAMyE,EAAoBzE,EAAY0E,QAAO,SAAAxE,GAAC,OAAIA,EAAEqE,UAC9CoB,EAAkB3F,EAAY0E,QAAO,SAAAxE,GAAC,OAAKA,EAAEqE,UAU7CqB,EAAoB,SAAA5F,GAAW,OACnC,kBAACiB,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,GACdlE,EAAYC,KAAI,SAAAC,GAAC,OAChB,kBAAC,EAAD,CACE6E,IAAK7E,EAAEtC,GACP8B,WAAYQ,SAKpB,OACE,oCACE,kBAAC,EAAD,CACEmC,KAAK,qBAEP,kBAACvB,EAAA,EAAD,CAAKY,UAAU,0BACZkE,EAAkBnB,IAErB,kBAAC3D,EAAA,EAAD,CAAKY,UAAU,+BACZ+D,EACGG,EAAkBD,GA3B1B,kBAAC1E,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,GACf,kBAAC,EAAD,CACE7B,KAAK,wBACLP,QAAS,kBAAM4D,GAAuB,UCM/BG,GApBA,kBACb,kBAAC/E,EAAA,EAAD,CAAKY,UAAU,qBACb,kBAACT,EAAA,EAAD,CAAKyC,GAAI,GAAIC,GAAI,GAAIjC,UAAU,QAC7B,kBAACD,EAAA,EAAD,CAAKC,UAAU,0BACb,kBAACD,EAAA,EAAIE,KAAL,CAAUX,GAAG,QACX,kBAAC,WAAD,CAAUmB,QAAM,EAACN,GAAG,SAAS,kBAAC,IAAD,QAE/B,kBAACJ,EAAA,EAAIE,KAAL,CAAUC,KAAK,yDACb,kBAAC,IAAD,OAEF,kBAACH,EAAA,EAAIE,KAAL,CAAUX,GAAG,QACX,kBAAC,UAAD,CAASa,GAAG,UAAU,kBAAC,IAAD,UAI5B,kBAACZ,EAAA,EAAD,CAAKyC,GAAI,GAAIC,GAAI,GAAIjC,UAAU,QAC7B,wD,mBCpBAoE,GAAkBnJ,EAAY,kBAwBvBoJ,GAAiB,SAACC,GAC7B,8CAAO,WAAMlH,GAAN,eAAAhC,EAAA,sEACqBgJ,GAAgB3I,OAAO6I,GAD5C,cACCC,EADD,OAGLnH,EAAS,CACPf,KAAM,kBACNkI,gBALG,kBAQEA,GARF,2CAAP,mDAAM,IAYOC,GAnCU,WAAyB,IAAxB5G,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAAQA,EAAOxB,MACf,IAAK,gBACH,OAAOwB,EAAO4G,UAChB,IAAK,kBACH,MAAM,GAAN,mBAAW7G,GAAX,CAAkBC,EAAO0G,cAC3B,QACE,OAAO3G,IC0CIsB,gBA5CM,SAAC,GAAoB,IAAlBlB,EAAiB,EAAjBA,WAChBZ,EAAW+B,cADsB,EAEL1C,oBAAS,GAFJ,mBAEhCoE,EAFgC,KAErBC,EAFqB,OAGH1E,EAAa,OAAQ,EAAG,IAAI,GAHzB,mBAGhCmG,EAHgC,KAG1BoB,EAH0B,KAGde,EAHc,KAKjCC,EAAoB,uCAAG,WAAO5H,GAAP,iBAAA3B,EAAA,yDAC3B2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHS,uBAIzBP,GAAa,GAJY,mDASG1D,EAASiH,GAAe,CAClD9B,KAAMA,EAAK7F,MACXkI,cAAe5G,EAAW9B,MAXH,OASnB2I,EATmB,OAcnB1G,EAdmB,gBAepBH,EAfoB,CAgBvByG,UAAU,GAAD,mBAAMzG,EAAWyG,WAAjB,CAA4BI,MAGvCzH,EAASgB,EAAsBD,IAC/BuG,EAAQ,IApBiB,kDAuBzBnE,QAAQC,IAAI,gCAAZ,MAvByB,0DAAH,sDA2B1B,OACE,kBAACgB,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAAUiD,GAC/C,kBAACnD,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,sBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBU,EAAlB,CAAwBT,YAAY,UACpC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAYsH,IAE1C,kBAAC,EAAD,CAAahD,KAAK,qBCHTmE,GAtCI,SAAClE,GAClB,IAAMxD,EAAW+B,cADW,EAEM1C,oBAAS,GAFf,mBAErBoE,EAFqB,KAEVC,EAFU,OAGoB1E,EAAa,OAAQ,EAAG,IAAI,GAHhD,mBAGrB2I,EAHqB,KAGXC,EAHW,KAGKC,EAHL,KAKtBC,EAAkB,uCAAG,WAAOnI,GAAP,SAAA3B,EAAA,yDACzB2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHO,uBAIvBP,GAAa,GAJU,0BAQzB,IACE1D,EAASsB,EAAa,CACpBqG,SAAUA,EAASrI,MACnBkI,cAAehE,EAAM5C,WAAW9B,MAGlC+I,EAAY,IAEZ,MAAO3E,GACPC,QAAQC,IAAI,8BAA+BF,GAjBpB,2CAAH,sDAqBxB,OACE,kBAACkB,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAAUwD,GAC/C,kBAAC1D,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,iBAAkBkD,EAAlB,CAA4BjD,YAAY,UACxC,kBAACN,EAAA,EAAKK,QAAQE,SAAd,CAAuB1F,KAAK,WAAY2I,IAE1C,kBAAC,EAAD,CAAarE,KAAK,iBCXTwE,GAvBa,SAAC,GAAD,IAC1BnH,EAD0B,EAC1BA,WACAoH,EAF0B,EAE1BA,oBACAC,EAH0B,EAG1BA,oBAH0B,OAM1B,kBAACtF,EAAA,EAAD,CAAKC,UAAU,eACb,kBAAC,GAAD,CACEhC,WAAYA,IAEd,kBAAC,GAAD,CACEA,WAAYA,IAEd,kBAAC,EAAD,CACE2C,KAAK,aACLP,QAASgF,IAEX,kBAAC,EAAD,CACEzE,KAAK,iBACLP,QAASiF,M,mBCAAC,GAtBQ,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQd,EAAgB,EAAhBA,UAIhC,OACE,4BACE,4BAAKc,EAAOR,UAEXN,EAAUlG,KAAI,SAAAiH,GAAC,OACd,wBAAInC,IAAKmC,EAAEtJ,IAPQ,SAACqJ,EAAQjB,GAAT,OAAsBiB,EAAOE,iBAAiBC,SAASpB,EAASpI,IAQhFyJ,CAAiBJ,EAAQC,GACtB,kBAAC,KAAD,CAAe5C,MAAM,UACrB,kBAAC,KAAD,CAAqBA,MAAM,YAKnC,4BAAK2C,EAAOK,QCKHC,GAvBU,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,QAASrB,EAAgB,EAAhBA,UAK7BsB,EAAc,SAACzB,GAAD,OAClB0B,KAAKC,MAJa,SAAC3B,GAAD,OAClBwB,EAAQ9C,QAAO,SAAAuC,GAAM,OAAIA,EAAOE,iBAAiBC,SAASpB,EAASpI,OAAKgK,OAG7DC,CAAY7B,GAAYwB,EAAQI,OAAS,KAAO,KAE7D,OACE,4BACE,+CAECzB,EAAUlG,KAAI,SAAAiH,GAAC,OACd,wBAAInC,IAAKmC,EAAEtJ,IACW,IAAnB4J,EAAQI,OAAe,EAAMH,EAAYP,OAI9C,+BC8BSY,GA7CC,SAAC,GAA4B,IAA1B3B,EAAyB,EAAzBA,UAIXqB,EAJoC,EAAd9G,QAKzBT,KAAI,SAAAI,GAAM,OAAIA,EAAOmH,QACnBvH,KAAI,SAAAgH,GAAM,OAAIc,OAAOC,OAAOf,EAAQ,CAAER,SAAUpG,EAAOoG,iBAEzDwB,OACAC,KAPY,SAACC,EAAIC,GAAL,OAAYD,EAAGb,KAAOc,EAAGd,KAAO,GAAK,IAD1B,SAACa,EAAIC,GAAL,OAAYD,EAAGhB,iBAAiBS,OAASQ,EAAGjB,iBAAiBS,QAAU,EAAI,IAUrG,OACE,kBAAC9G,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,KACE,kBAACoH,GAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,GACtC,+BACE,4BACE,sCACCtC,EAAUlG,KAAI,SAAAiH,GAAC,OACd,wBAAInC,IAAKmC,EAAEtJ,IAAMsJ,EAAEjD,SAErB,sCAGJ,+BACGuD,EAAQvH,KAAI,SAAAU,GAAC,OACZ,kBAAC,GAAD,CACEoE,IAAKpE,EAAE/C,GACPqJ,OAAQtG,EACRwF,UAAWA,QAIjB,+BACE,kBAAC,GAAD,CACEqB,QAASA,EACTrB,UAAWA,SC0CVvF,gBA1EI,SAAC,GAA2D,IAAzDlB,EAAwD,EAAxDA,WAAYsD,EAA4C,EAA5CA,QAAStC,EAAmC,EAAnCA,QAASoG,EAA0B,EAA1BA,oBAC5ChI,EAAW+B,cAEjB,IAAKnB,EACH,OAAO,KAGT,IAAMqH,EAAmB,uCAAG,4BAAAjK,EAAA,sDAC1B,IACQ+C,EADJ,gBAC6BH,EAD7B,CACyC6E,QAAQ,IACnDzF,EAASc,EAAiBC,IAC1BmD,EAAQC,KAAK,gBAEb,MAAOjB,GACPC,QAAQC,IAAIF,GAPY,2CAAH,qDAWnB0G,EAAkD,IAAhChJ,EAAWyG,UAAUyB,OACzC,iBAAM,gBACN,kBAAMlI,EAAWyG,UAAUlG,KAAI,SAAAC,GAAC,OAChC,kBAACyI,GAAA,EAAUC,KAAX,CAAgB7D,IAAK7E,EAAEtC,IACpBsC,EAAE+D,UAIH4E,EAAmC,IAAnBnI,EAAQkH,OAC1B,iBAAM,cACN,kBAAMlH,EAAQT,KAAI,SAAAU,GAAC,OACnB,kBAACgI,GAAA,EAAUC,KAAX,CAAgB7D,IAAKpE,EAAE/C,IACpB+C,EAAE8F,cAIT,OACE,oCACE,kBAAC,EAAD,CACEpE,KAAM3C,EAAWuE,OAEnB,kBAACnD,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,CAAE4E,KAAM,EAAGC,OAAQ,IAClC,kBAAC,GAAD,CACErJ,WAAYA,EACZoH,oBAAqBA,EACrBC,oBAAqBA,KAGzB,kBAAC9F,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,CAAE4E,KAAM,EAAGC,OAAQ,IAClC,yCAEA,kBAACJ,GAAA,EAAD,CAAWK,QAAQ,SAChBN,MAGL,kBAACzH,EAAA,EAAD,CAAKyC,GAAI,GAAIQ,GAAI,CAAE4E,KAAM,EAAGC,OAAQ,IAClC,uCAEA,kBAACJ,GAAA,EAAD,CAAWK,QAAQ,SAChBH,OAIP,kBAAC,EAAD,CACExG,KAAK,UACLtE,KAAK,gBAEP,kBAACkL,GAAD,CACE9C,UAAWzG,EAAWyG,UACtBzF,QAASA,Q,UC3EXwI,GAAgBvM,EAAY,gBAwBrBwM,GAAe,SAAClC,GAC3B,8CAAO,WAAMnI,GAAN,eAAAhC,EAAA,sEACmBoM,GAAc/L,OAAO8J,GADxC,cACCmC,EADD,OAGLtK,EAAS,CACPf,KAAM,gBACNqL,cALG,kBAQEA,GARF,2CAAP,mDAAM,IAYOC,GAnCQ,WAAyB,IAAxB/J,EAAuB,uDAAf,GAAIC,EAAW,uCAC7C,OAAQA,EAAOxB,MACf,IAAK,cACH,OAAOwB,EAAOiI,QAChB,IAAK,gBACH,MAAM,GAAN,mBAAWlI,GAAX,CAAkBC,EAAO6J,YAC3B,QACE,OAAO9J,ICgHIgK,GApHG,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAO9I,EAAyB,EAAzBA,QAASyF,EAAgB,EAAhBA,UAAgB,EACvBhI,oBAAS,GADc,mBAClDoE,EADkD,KACvCC,EADuC,OAEfrE,mBAAS,MAFM,mBAElDsL,EAFkD,KAEnCC,EAFmC,OAGjCvL,mBAAS,GAHwB,mBAGlDmJ,EAHkD,KAG5CqC,EAH4C,OAIXxL,mBAAS,IAJE,mBAIlDyL,EAJkD,KAIjCC,EAJiC,KAKnD/K,EAAW+B,cAEjB,IAAKH,EACH,OAAO,KAGT,IAAMoJ,EAAW,SAAAlM,GAAE,OAAIgM,EAAgBxC,SAASxJ,IAgB1CmM,EAAgB,uCAAG,WAAOtL,GAAP,qBAAA3B,EAAA,yDACvB2B,EAAMqE,iBAEDrE,EAAMC,OAAOqE,gBAHK,uBAIrBP,GAAa,GAJQ,iCAQjBnC,EAASoJ,GAAgC/I,EAAQ,GAEjDuG,EAAS,CACb+C,UAAW3J,EAAOzC,GAClB0J,OACAH,iBAAkByC,GAbG,kBAiBK9K,EAASqK,GAAalC,IAjB3B,OAiBfgD,EAjBe,OAmBfzJ,EAnBe,gBAmBMH,EAnBN,CAoBnBmH,QAAQ,GAAD,mBAAMnH,EAAOmH,SAAb,CAAsByC,MAG/BnL,EAASyB,EAAaC,IACtBmJ,EAAQ,GACRD,EAAiB,MACjBG,EAAmB,IACnBL,IA3BqB,kDA8BrBvH,QAAQC,IAAR,MA9BqB,0DAAH,sDAkCtB,OACE,kBAACgI,GAAA,EAAD,CAAOX,KAAMA,EAAMY,OAAQX,EAAOY,UAAQ,GACxC,kBAACF,GAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,GAAA,EAAMK,MAAP,+BAIF,kBAACL,GAAA,EAAMM,KAAP,KACE,kBAACtH,EAAA,EAAD,CAAMC,YAAU,EAACZ,UAAWA,EAAWa,SAAU2G,GAC/C,kBAAC7G,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,sBACA,4BAAQ1F,GAAG,UAAUY,SAjDJ,SAAAC,GACzBiL,EAAiBhJ,EAAQ+J,MAAK,SAAA9J,GAAC,OAAIA,EAAE8F,WAAahI,EAAMC,OAAON,YAiDpDsC,EAAQT,KAAI,SAAAU,GAAC,OACZ,4BAAQoE,IAAKpE,EAAE/C,IACZ+C,EAAE8F,eAKX,kBAACvD,EAAA,EAAKG,MAAN,KACE,kBAACH,EAAA,EAAKI,MAAN,aACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcxF,KAAK,SAASS,SA/Db,SAAAC,GACvBkL,EAAQlL,EAAMC,OAAON,QA8D2CoF,YAAY,UAErE2C,EAAUlG,KAAI,SAAAiH,GAAC,OACd,kBAAChE,EAAA,EAAKG,MAAN,CAAY0B,IAAKmC,EAAEtJ,IACjB,kBAACsF,EAAA,EAAKwH,MAAN,CACE3M,KAAK,WACL4M,MAAOzD,EAAEjD,KACT2G,QAASd,EAAS5C,EAAEtJ,IACpBY,SAAU,kBAAMsL,EAAS5C,EAAEtJ,KA7ENA,EA8EUsJ,EAAEtJ,GA7E7CiM,EAAmBD,EAAgBlF,QAAO,SAAAwC,GAAC,OAAIA,IAAM2D,OAAOjN,QAE9B,SAAAA,GAAE,OAChCiM,EAAmB,GAAD,mBAAKD,GAAL,CAAsBhM,KA2ExBkN,CAAwB5D,EAAEtJ,IA/ET,IAAAA,SAmF3B,kBAACsF,EAAA,EAAKpC,IAAN,KACE,kBAACG,EAAA,EAAD,KACE,kBAAC,EAAD,CACEoB,KAAK,iBAGT,kBAACpB,EAAA,EAAD,KACE,kBAAC,EAAD,CACEoB,KAAK,SACLtE,KAAK,SACL+D,QAAS0H,UCzEVuB,GAlCU,SAAC,GAAqB,IAAnB/K,EAAkB,EAAlBA,YAAkB,EACF7B,oBAAS,GADP,mBACrC6M,EADqC,KACtBC,EADsB,KAEtCC,EAAeC,cAAYvN,GAE3B8C,EAAU0K,aAAY,SAAA9L,GAAK,OAC/BA,EAAMoB,QAAQgE,QAAO,SAAA/D,GAAC,OAAIA,EAAE2F,gBAAkBuE,OAAOK,SAGjDxL,EAAaM,EAAYyK,MAAK,SAAAvK,GAAC,OAAIA,EAAEtC,KAAOiN,OAAOK,MAKzD,OAAKxL,EAKH,oCACE,kBAAC,GAAD,CACEA,WAAYA,EACZgB,QAASA,EACToG,oBAXsB,kBAAMmE,GAAiB,MAa/C,kBAAC,GAAD,CACEvK,QAASA,EACTyF,UAAWzG,EAAWyG,UACtBoD,KAAMyB,EACNxB,MAlBuB,kBAAMyB,GAAiB,OAI3C,MCKII,GArBD,kBACZ,oCACE,kBAAC,EAAD,CACEhJ,KAAK,sBAEP,kBAACvB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAKS,UAAU,oBACb,qFAEE,uBAAGE,KAAK,wDAAR,kBAFF,iBAKA,+MCgFO0J,I,OA5EH,WACV,IAAMxM,EAAW+B,cAEjB0K,qBAAU,WACR,I1BgB0BxM,E0BhBpByM,EAASxM,OAAOC,aAAawM,QAAQ,0BACvCD,GACF1M,G1BcwBC,E0BdAI,KAAKuM,MAAMF,G1BevC,uCAAO,WAAM1M,GAAN,SAAAhC,EAAA,sDACLL,EAASsC,EAAKvC,OAEdsC,EAAS,CACPf,KAAM,QACNgB,SALG,2CAAP,mDAAM,O0BbH,IAEHwM,qBAAU,WACRzM,EzBbF,uCAAO,WAAMA,GAAN,eAAAhC,EAAA,sEACqB0C,EAAkB3C,SADvC,OACCmD,EADD,OAGLlB,EAAS,CACPf,KAAM,kBACNiC,gBALG,2CAAP,mDAAM,MyBcH,IAEHuL,qBAAU,WACRzM,ExBjBF,uCAAO,WAAMA,GAAN,eAAAhC,EAAA,sEACiBqD,EAActD,SAD/B,OACC6D,EADD,OAGL5B,EAAS,CACPf,KAAM,cACN2C,YALG,2CAAP,mDAAM,MwBkBH,IAEH,IAAMiL,EAAaP,aAAY,SAAA9L,GAAK,OAAIA,EAAMP,QACxCiB,EAAcoL,aAAY,SAAA9L,GAAK,OAAIA,EAAMU,eAEzC4L,EACJD,GAAc3L,EAAY0E,QAAO,SAAAxE,GAAC,OAAIA,EAAE2L,aAAeF,EAAW/N,MAEpE,OACE,kBAACkO,EAAA,EAAD,CAAWhI,OAAK,GACd,kBAAC,gBAAD,KACE,kBAACiI,EAAD,CACEhN,KAAM4M,IAGR,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,KAAK,UACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,oBACV,kBAAC,GAAD,CACEhM,YAAaA,KAIjB,kBAAC,IAAD,CAAOgM,KAAK,gBACV,kBAAC,GAAD,CACEhM,YAAa4L,KAIjB,kBAAC,IAAD,CAAOI,KAAK,eACV,kBAAC,GAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,CACEjN,KAAM4M,EACN3L,YAAaA,MAKnB,kBAAC,WAAD,CAAUmC,QAAM,EAACN,GAAG,QAClB,kBAAC,IAAD,CACET,MAAO,CAAE6K,SAAU,QAASC,OAAQ,OAAQC,MAAO,OAAQC,OAAQ,WAIvE,kBAAC,GAAD,U,kBCjFFC,GAAUC,aAAgB,CAC9BvN,KAAMM,EACNkN,SAAUnH,EACVpF,YAAaD,EACboG,UAAWD,GACXxF,QAASD,EACT+G,QAAS6B,KAKImD,GAFDC,aAAYJ,GAASK,aAAgBC,O,eCTnDC,IAASC,OACP,kBAAC,KAAYC,SAAb,CAAsB1O,MAAO,CAAE2O,KAAM,SAAUzI,MAAO,qBACpD,kBAAC,IAAD,CAAUkI,MAAOA,IACf,kBAAC,GAAD,QAGJQ,SAASC,eAAe,U","file":"static/js/main.5c30e995.chunk.js","sourcesContent":["import { useState } from 'react'\nimport axios from 'axios'\n\nlet token = null\n\nexport const setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nexport const useResource = (baseUrl) => {\n\n  const getAll = async () => {\n    const res = await axios.get(baseUrl)\n    return res.data\n  }\n\n  const create = async (resource) => {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const res = await axios.post(baseUrl, resource, config)\n    return res.data\n  }\n\n  const login = async (credentials) => {\n    const res = await axios.post(baseUrl, credentials)\n    return res.data\n  }\n\n  const update = async (id, resource) => {\n    const config = {\n      headers: {\n        Authorization: token\n      }\n    }\n    const res = await axios.put(`${baseUrl}/${id}`, resource, config)\n    return res.data\n  }\n\n  return  {\n    create, getAll, update, login\n  }\n}\n\nexport const useTextField = (type, minLength, maxLength, required = false) => {\n  const [value, setValue] = useState('')\n  const [validationMessage, setValidationMessage] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const onInvalid = () => {\n    setValidationMessage('field must be within ' + minLength + '-' + maxLength + ' characters')\n  }\n\n  return [\n    {\n      type,\n      minLength,\n      maxLength,\n      required,\n      value,\n      onChange,\n      onInvalid\n    },\n    validationMessage,\n    setValue\n  ]\n}","import { useResource, setToken } from '../hooks/'\n\nconst loginService = useResource('/api/login')\n\nconst loginReducer = (state = null, action) => {\n  switch (action.type) {\n  case 'LOGIN':\n    return action.user\n  case 'LOGOUT':\n    return null\n  default:\n    return state\n  }\n}\n\nexport const loginUser = (credentials) => {\n  return async dispatch => {\n    const user = await loginService.login(credentials)\n\n    window.localStorage.setItem('loggedNinjaRankingUser', JSON.stringify(user))\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport const logoutUser = () => {\n  return async dispatch => {\n    window.localStorage.removeItem('loggedNinjaRankingUser')\n    setToken(null)\n\n    dispatch({\n      type: 'LOGOUT'\n    })\n  }\n}\n\nexport const setUserToState = user => {\n  return async dispatch => {\n    setToken(user.token)\n\n    dispatch({\n      type: 'LOGIN',\n      user\n    })\n  }\n}\n\nexport default loginReducer","import { useResource } from '../hooks'\n\nconst tournamentService = useResource('/api/tournaments')\n\nconst tournamentsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_TOURNAMENTS':\n    return action.tournaments\n  case 'CREATE_TOURNAMENT':\n    return [...state, action.newTournament ]\n  case 'UPDATE_TOURNAMENT':\n    return state.map(t => t.id === action.updatedTournament.id ? action.updatedTournament : t)\n  default:\n    return state\n  }\n}\n\nexport const getAllTournaments = () => {\n  return async dispatch => {\n    const tournaments = await tournamentService.getAll()\n\n    dispatch({\n      type: 'GET_TOURNAMENTS',\n      tournaments\n    })\n  }\n}\n\nexport const createTournament = (tournament) => {\n  return async dispatch => {\n    const newTournament = await tournamentService.create(tournament)\n\n    dispatch({\n      type: 'CREATE_TOURNAMENT',\n      newTournament\n    })\n  }\n}\n\nexport const updateTournament = (tournament) => {\n  return async dispatch => {\n    const updatedTournament = await tournamentService.update(tournament.id, tournament)\n    dispatch(updateTournamentState(updatedTournament))\n  }\n}\n\nexport const updateTournamentState = updatedTournament => {\n  return {\n    type: 'UPDATE_TOURNAMENT',\n    updatedTournament\n  }\n}\n\nexport default tournamentsReducer","import { useResource } from '../hooks'\n\nconst playerService = useResource('/api/players')\n\nconst playersReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_PLAYERS':\n    return action.players\n  case 'CREATE_PLAYER':\n    return [...state, action.newPlayer ]\n  case 'UPDATE_PLAYER':\n    return state.map(p => p.id === action.updatedPlayer.id ? action.updatedPlayer : p)\n  default:\n    return state\n  }\n}\n\nexport const getAllPlayers = () => {\n  return async dispatch => {\n    const players = await playerService.getAll()\n\n    dispatch({\n      type: 'GET_PLAYERS',\n      players\n    })\n  }\n}\n\nexport const createPlayer = player => {\n  return async dispatch => {\n    const newPlayer = await playerService.create(player)\n\n    dispatch({\n      type: 'CREATE_PLAYER',\n      newPlayer\n    })\n  }\n}\n\nexport const updatePlayer = updatedPlayer => {\n  return {\n    type: 'UPDATE_PLAYER',\n    updatedPlayer\n  }\n}\n\nexport default playersReducer","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { HashLink } from 'react-router-hash-link'\nimport { logoutUser } from '../reducers/loginReducer'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Navbar, Nav, Row, Col } from 'react-bootstrap'\nimport { GoHome } from 'react-icons/go'\n\nconst Navigation = ({ user }) => {\n  const dispatch = useDispatch()\n\n  const handleLogout = () => {\n    try {\n      dispatch(logoutUser())\n    } catch (exception) {\n      console.log('logout failed, bollocks', exception)\n    }\n  }\n\n  return (\n    <Row id='top'>\n      <Navbar as={Col} collapseOnSelect expand='lg' style={{ backgroundColor: 'rgb(252, 156, 217)' }}>\n        <Navbar.Toggle aria-controls='responsive-navbar-nav' />\n        <Navbar.Collapse id='responsive-navbar-nav'>\n          <Nav className='mr-auto'>\n            <Nav.Link href='#' as='span'>\n              <NavLink to='/' ><GoHome /></NavLink>\n            </Nav.Link>\n          </Nav>\n\n          {user &&\n            <>\n              <Nav className='justify-content-center mr-auto'>\n                <Nav.Link href='#' as='span' >\n                  <NavLink to='/tournaments' >Manage tournaments</NavLink>\n                </Nav.Link>\n                <Nav.Link href='#' as='span' >\n                  <NavLink to='/tournament' >Create new tournament</NavLink>\n                </Nav.Link>\n              </Nav>\n              <Nav>\n                <Nav.Link href='#' as='span'>\n                  <NavLink to='/' onClick={handleLogout} >Logout</NavLink>\n                </Nav.Link>\n              </Nav>\n            </>\n          }\n\n          {!user &&\n            <Nav>\n              <Nav.Link href='#' as='span'>\n                <HashLink smooth to='/#loginform' >Login</HashLink>\n              </Nav.Link>\n              <Nav.Link href='#' as='span'>\n                <NavLink to='/register' >Create account</NavLink>\n              </Nav.Link>\n            </Nav>\n          }\n        </Navbar.Collapse>\n      </Navbar>\n    </Row>\n  )\n}\n\nexport default withRouter(Navigation)","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst NinjaButton = ({ text, type='submit', onClick }) => {\n  return (\n    <input\n      className='ninja-button'\n      type={type}\n      value={text}\n      onClick={onClick}\n    />\n  )\n}\n\nNinjaButton.propTypes = {\n  text: PropTypes.string.isRequired\n}\n\nexport default NinjaButton","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { Form, Row, Col } from 'react-bootstrap'\nimport { loginUser } from '../reducers/loginReducer'\nimport { useTextField } from '../hooks'\nimport NinjaButton from './NinjaButton'\n\nconst LoginForm = (props) => {\n  const dispatch = useDispatch()\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      dispatch(loginUser({\n        username: username.value,\n        password: password.value\n      }))\n\n      props.history.push('/')\n\n    } catch (exception) {\n      console.log('Login failed', exception)\n    }\n  }\n\n  return (\n    <Row id='loginform'>\n      <Col>\n        <h2 className='text-center mt-4'>\n        Login to Ninja Ranking\n        </h2>\n        <Form className='form' noValidate validated={validated} onSubmit={handleLogin} >\n          <Form.Group >\n            <Form.Label>Username</Form.Label>\n            <Form.Control {...username} placeholder='Username' />\n            <Form.Control.Feedback type='invalid' >{usernameErrors}</Form.Control.Feedback>\n          </Form.Group>\n          <Form.Group >\n            <Form.Label>Password</Form.Label>\n            <Form.Control {...password} placeholder='Password' />\n            <Form.Control.Feedback type='invalid' >{passwordErrors}</Form.Control.Feedback>\n          </Form.Group>\n          <NinjaButton text='Login' />\n          <Form.Row>\n            <Col xs={12} md={6} >\n              <small className='float-left'>\n                <Link to='/register'> Not yet a member?</Link>\n              </small>\n            </Col>\n            <Col xs={12} md={6}>\n              <small className='float-right'>\n                <Link to='/register'> Forgot your password?</Link>\n              </small>\n            </Col>\n          </Form.Row>\n        </Form>\n      </Col>\n    </Row>\n  )\n}\n\nexport default withRouter(LoginForm)","import React from 'react'\nimport { Row, Col, Jumbotron } from 'react-bootstrap'\n\nconst NinjaBanner = ({ text, type='banner' }) => {\n  return (\n    <Row>\n      <Jumbotron as={Col}\n        fluid\n        className={type === 'banner' ? 'ninja-banner' : 'ninja-description'}\n      >\n        <h1>\n          {text}\n        </h1>\n      </Jumbotron>\n    </Row>\n  )\n}\n\nexport default NinjaBanner","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport moment from 'moment'\nimport { Row, Col } from 'react-bootstrap'\n\nconst TournamentOverview = ({ tournament }) => {\n\n  return (\n    <>\n      <Row style={{ borderTop: '1px solid lightgrey' }}>\n        <Col>\n          <NavLink to={`/tournaments/${tournament.id}`}>\n            <h2>{tournament.name}</h2>\n          </NavLink>\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={12} sm={6}>\n          <h6 className='text-muted'>\n            Created on {moment(tournament.created).format('MMMM Do YYYY')}\n          </h6>\n        </Col>\n        <Col xs={12} sm={6}>\n          <h6 className='float-right' style={{ color: tournament.active ? 'green' : 'red' }}>\n            {tournament.active ? 'active' : 'inactive' }\n          </h6>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default TournamentOverview","import React from 'react'\nimport { Row, Col, Image } from 'react-bootstrap'\nimport LoginForm from './LoginForm'\nimport NinjaBanner from './NinjaBanner'\nimport TournamentOverview from './TournamentOverview'\n\nconst FrontPage = ({ user, tournaments }) => {\n\n  const activeTournaments = tournaments.filter(t => t.active)\n\n  const renderTournaments = () =>\n    <Col xs={12} sm={6} className='mt-4'>\n      {activeTournaments.map(t =>\n        <TournamentOverview\n          key={t.id}\n          tournament={t}\n        />\n      )}\n    </Col>\n\n  return (\n    <Row className='justify-content-center'>\n      <Image fluid\n        src='/ninja_ranking_banner.jpg'\n        style={{ width: '100%', height: 'auto' }}\n      />\n\n      {!user &&\n        <LoginForm />\n      }\n\n      {user &&\n        <Col>\n          <NinjaBanner\n            text={`Welcome back ${user.name}`}\n          />\n          <Row className='justify-content-center'>\n            <h3>Here is some recent tournaments to check:</h3>\n\n            {renderTournaments()}\n          </Row>\n        </Col>\n      }\n    </Row>\n  )\n}\n\nexport default FrontPage","import { useResource } from '../hooks'\n\nconst accountsService = useResource('/api/accounts')\n\nconst accountsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'REGISTER_ACCOUNT':\n    return [...state, action.newAccount ]\n  default:\n    return state\n  }\n}\n\nexport const registerAccount = account => {\n  return async dispatch => {\n    const newAccount = await accountsService.create(account)\n\n    dispatch({\n      type: 'REGISTER_ACCOUNT',\n      newAccount\n    })\n  }\n}\n\nexport default accountsReducer","import React, { useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { Form, Row, Col } from 'react-bootstrap'\nimport NinjaButton from './NinjaButton'\nimport { registerAccount } from '../reducers/accountsReducer'\nimport { useTextField } from '../hooks'\nimport NinjaBanner from './NinjaBanner'\n\nconst RegisterForm = (props) => {\n  const dispatch = useDispatch()\n  const [validated, setValidated] = useState(false)\n  const [username, usernameErrors] = useTextField('text', 5, 20, true)\n  const [password, passwordErrors] = useTextField('password', 5, 20, true)\n  const [name, nameErrors] = useTextField('text', 1, 20, true)\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      dispatch(registerAccount({\n        username: username.value,\n        password: password.value,\n        name: name.value\n      }))\n\n      props.history.push('/login')\n\n    } catch (exception) {\n      console.log('Oooops from register form', exception)\n    }\n  }\n\n  return (\n    <>\n      <NinjaBanner\n        text='Create new Ninja Account'\n      />\n      <Row>\n        <Col className='form'>\n          <Form noValidate validated={validated} onSubmit={handleRegister} >\n            <Form.Group >\n              <Form.Label>Name</Form.Label>\n              <Form.Control {...name} placeholder='Name' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Username</Form.Label>\n              <Form.Control {...username} placeholder='Username' />\n              <Form.Control.Feedback type='invalid' >{usernameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <Form.Group >\n              <Form.Label>Password</Form.Label>\n              <Form.Control {...password} placeholder='Password' />\n              <Form.Control.Feedback type='invalid' >{passwordErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <NinjaButton text='Register' />\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default withRouter(RegisterForm)","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Form, Row, Col } from 'react-bootstrap'\nimport { useTextField } from '../hooks'\nimport { createTournament } from '../reducers/tournamentsReducer'\nimport NinjaButton from './NinjaButton'\nimport NinjaBanner from './NinjaBanner'\n\nconst TournamentForm = (props) => {\n  const dispatch = useDispatch()\n  const [validated, setValidated] = useState(false)\n  const [name, nameErrors] = useTextField('text', 1, 50, true)\n\n  const handleCreateTournament = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      dispatch(createTournament({\n        name: name.value\n      }))\n\n      props.history.push('/tournaments')\n\n    } catch (exception) {\n      console.log('Creation of a tournament failed', exception)\n    }\n  }\n\n  return (\n    <>\n      <NinjaBanner\n        text='Create Ninja Tournament'\n      />\n      <Row>\n        <Col className='form'>\n          <Form noValidate validated={validated} onSubmit={handleCreateTournament} >\n            <Form.Group >\n              <Form.Label>Name of the Tournament</Form.Label>\n              <Form.Control {...name} placeholder='Name' />\n              <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n            </Form.Group>\n            <NinjaButton text='Create tournament' />\n          </Form>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default withRouter(TournamentForm)","import React, { useState } from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport NinjaBanner from './NinjaBanner'\nimport TournamentOverview from './TournamentOverview'\nimport NinjaButton from './NinjaButton'\n\nconst Tournaments = ({ tournaments }) => {\n  const [showPastTournaments, SetShowPastTournaments] = useState(false)\n\n  if (!tournaments) {\n    return null\n  }\n\n  const activeTournaments = tournaments.filter(t => t.active)\n  const pastTournaments = tournaments.filter(t => !t.active)\n\n  const renderShowButton = () =>\n    <Col xs={12} sm={6}>\n      <NinjaButton\n        text='Show past tournaments'\n        onClick={() => SetShowPastTournaments(true)}\n      />\n    </Col>\n\n  const renderTournaments = tournaments =>\n    <Col xs={12} sm={6} >\n      {tournaments.map(t =>\n        <TournamentOverview\n          key={t.id}\n          tournament={t}\n        />\n      )}\n    </Col>\n\n  return (\n    <>\n      <NinjaBanner\n        text='Your tournaments'\n      />\n      <Row className='justify-content-center'>\n        {renderTournaments(activeTournaments)}\n      </Row>\n      <Row className='justify-content-center mt-4'>\n        {showPastTournaments\n          ? renderTournaments(pastTournaments)\n          : renderShowButton()\n        }\n      </Row>\n    </>\n  )\n}\n\nexport default Tournaments","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { HashLink } from 'react-router-hash-link'\nimport { Row, Col, Nav } from 'react-bootstrap'\nimport { GoMarkGithub, GoQuestion, GoHome } from 'react-icons/go'\n\nconst Footer = () =>\n  <Row className='ninja-banner mt-5'>\n    <Col xs={12} md={12} className='mt-4'>\n      <Nav className='justify-content-center'>\n        <Nav.Link as='span'>\n          <HashLink smooth to='/#top' ><GoHome /></HashLink>\n        </Nav.Link>\n        <Nav.Link href='https://github.com/MiguelSombrero/ninja-ranking-react'>\n          <GoMarkGithub />\n        </Nav.Link>\n        <Nav.Link as='span'>\n          <NavLink to='/about' ><GoQuestion /></NavLink>\n        </Nav.Link>\n      </Nav>\n    </Col>\n    <Col xs={12} md={12} className='mt-4' >\n      <p>&copy; Miika Somero 2020</p>\n    </Col>\n  </Row>\n\nexport default Footer","import { useResource } from '../hooks'\n\nconst obstacleService = useResource('/api/obstacles')\n\nconst obstaclesReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_OBSTACLES':\n    return action.obstacles\n  case 'CREATE_OBSTACLE':\n    return [...state, action.newObstacle ]\n  default:\n    return state\n  }\n}\n\nexport const getAllObstacles = () => {\n  return async dispatch => {\n    const obstacles = await obstacleService.getAll()\n\n    dispatch({\n      type: 'GET_OBSTACLES',\n      obstacles\n    })\n  }\n}\n\nexport const createObstacle = (obstacle) => {\n  return async dispatch => {\n    const newObstacle = await obstacleService.create(obstacle)\n\n    dispatch({\n      type: 'CREATE_OBSTACLE',\n      newObstacle\n    })\n\n    return newObstacle\n  }\n}\n\nexport default obstaclesReducer","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport { useTextField } from '../hooks'\nimport { createObstacle } from '../reducers/obstaclesReducer'\nimport { updateTournamentState } from '../reducers/tournamentsReducer'\nimport NinjaButton from './NinjaButton'\n\nconst ObstacleForm = ({ tournament }) => {\n  const dispatch = useDispatch()\n  const [validated, setValidated] = useState(false)\n  const [name, nameErrors, setName] = useTextField('text', 1, 20, true)\n\n  const handleCreateObstacle = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      const savedObstacle = await dispatch(createObstacle({\n        name: name.value,\n        tournament_id: tournament.id\n      }))\n\n      const updatedTournament = {\n        ...tournament,\n        obstacles: [...tournament.obstacles, savedObstacle]\n      }\n\n      dispatch(updateTournamentState(updatedTournament))\n      setName('')\n\n    } catch (exception) {\n      console.log('Creation of a obstacle failed', exception)\n    }\n  }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleCreateObstacle} >\n      <Form.Group >\n        <Form.Label>Obstacle name</Form.Label>\n        <Form.Control {...name} placeholder='Name' />\n        <Form.Control.Feedback type='invalid' >{nameErrors}</Form.Control.Feedback>\n      </Form.Group>\n      <NinjaButton text='New obstacle' />\n    </Form>\n  )\n}\n\nexport default withRouter(ObstacleForm)","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createPlayer } from '../reducers/playersReducer'\nimport { Form } from 'react-bootstrap'\nimport { useTextField } from '../hooks'\nimport NinjaButton from './NinjaButton'\n\nconst PlayerForm = (props) => {\n  const dispatch = useDispatch()\n  const [validated, setValidated] = useState(false)\n  const [nickname, nicknameErrors, setNickname] = useTextField('text', 1, 50, true)\n\n  const handleCreatePlayer = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    try {\n      dispatch(createPlayer({\n        nickname: nickname.value,\n        tournament_id: props.tournament.id\n      }))\n\n      setNickname('')\n\n    } catch (exception) {\n      console.log('Creation of a player failed', exception)\n    }\n  }\n\n  return (\n    <Form noValidate validated={validated} onSubmit={handleCreatePlayer} >\n      <Form.Group >\n        <Form.Label>Player name</Form.Label>\n        <Form.Control {...nickname} placeholder='Name' />\n        <Form.Control.Feedback type='invalid' >{nicknameErrors}</Form.Control.Feedback>\n      </Form.Group>\n      <NinjaButton text='New player' />\n    </Form>\n  )\n}\n\nexport default PlayerForm","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport NinjaButton from './NinjaButton'\nimport ObstacleForm from './ObstacleForm'\nimport PlayerForm from './PlayerForm'\n\nconst NavigationSidePanel = ({\n  tournament,\n  handleShowAddResult,\n  handleEndTournament\n}) =>\n\n  <Nav className='flex-column'>\n    <ObstacleForm\n      tournament={tournament}\n    />\n    <PlayerForm\n      tournament={tournament}\n    />\n    <NinjaButton\n      text='Add result'\n      onClick={handleShowAddResult}\n    />\n    <NinjaButton\n      text='End tournament'\n      onClick={handleEndTournament}\n    />\n  </Nav>\n\nexport default NavigationSidePanel","import React from 'react'\nimport { FaCheckCircle, FaExclamationCircle } from 'react-icons/fa'\n\nconst ResultTableRow = ({ result, obstacles }) => {\n\n  const obstacleIsPassed = (result, obstacle) => result.passed_obstacles.includes(obstacle.id)\n\n  return (\n    <tr>\n      <td>{result.nickname}</td>\n\n      {obstacles.map(o =>\n        <td key={o.id}>\n          {obstacleIsPassed(result, o)\n            ? <FaCheckCircle color='green' />\n            : <FaExclamationCircle color='red' />\n          }\n        </td>\n      )}\n\n      <td>{result.time}</td>\n    </tr>\n  )\n}\n\nexport default ResultTableRow","import React from 'react'\n\nconst ObstacleTableRow = ({ results, obstacles }) => {\n\n  const passedCount = (obstacle) =>\n    results.filter(result => result.passed_obstacles.includes(obstacle.id)).length\n\n  const passedRatio = (obstacle) =>\n    Math.round(passedCount(obstacle) / results.length * 100) / 100\n\n  return (\n    <tr>\n      <th>Obstacle pass-%</th>\n\n      {obstacles.map(o =>\n        <th key={o.id}>\n          {results.length === 0 ? 0.0 : passedRatio(o)}\n        </th>\n      )}\n\n      <th></th>\n    </tr>\n  )\n}\n\nexport default ObstacleTableRow","import React from 'react'\nimport { Row, Col, Table } from 'react-bootstrap'\nimport ResultTableRow from './ResultTableRow'\nimport ObstacleTableRow from './ObstacleTableRow'\n\nconst Results = ({ obstacles, players }) => {\n  const byPassedObstacles = (r1, r2) => r1.passed_obstacles.length > r2.passed_obstacles.length ? -1 : 1\n  const byTime = (r1, r2) => r1.time > r2.time ? 1 : -1\n\n  const results = players\n    .map(player => player.results\n      .map(result => Object.assign(result, { nickname: player.nickname }))\n    )\n    .flat()\n    .sort(byTime && byPassedObstacles)\n\n  return (\n    <Row>\n      <Col>\n        <Table striped bordered hover responsive>\n          <thead>\n            <tr>\n              <th>Player</th>\n              {obstacles.map(o =>\n                <th key={o.id} >{o.name}</th>\n              )}\n              <th>Time</th>\n            </tr>\n          </thead>\n          <tbody>\n            {results.map(p =>\n              <ResultTableRow\n                key={p.id}\n                result={p}\n                obstacles={obstacles}\n              />\n            )}\n          </tbody>\n          <thead>\n            <ObstacleTableRow\n              results={results}\n              obstacles={obstacles}\n            />\n          </thead>\n        </Table>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Results","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, ListGroup } from 'react-bootstrap'\nimport { updateTournament } from '../reducers/tournamentsReducer'\nimport { useDispatch } from 'react-redux'\nimport NavigationSidePanel from './NavigationSidePanel'\nimport NinjaBanner from './NinjaBanner'\nimport ResultsTable from './ResultsTable'\n\nconst Tournament = ({ tournament, history, players, handleShowAddResult }) => {\n  const dispatch = useDispatch()\n\n  if (!tournament) {\n    return null\n  }\n\n  const handleEndTournament = async () => {\n    try {\n      const updatedTournament = { ...tournament, active: false }\n      dispatch(updateTournament(updatedTournament))\n      history.push('/tournaments')\n\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  const renderObstacles = tournament.obstacles.length === 0\n    ? () => 'no obstacles'\n    : () => tournament.obstacles.map(t =>\n      <ListGroup.Item key={t.id} >\n        {t.name}\n      </ListGroup.Item>\n    )\n\n  const renderPlayers = players.length === 0\n    ? () => 'no players'\n    : () => players.map(p =>\n      <ListGroup.Item key={p.id}>\n        {p.nickname}\n      </ListGroup.Item>\n    )\n\n  return (\n    <>\n      <NinjaBanner\n        text={tournament.name}\n      />\n      <Row>\n        <Col xs={12} sm={{ span: 3, offset: 1 }} >\n          <NavigationSidePanel\n            tournament={tournament}\n            handleShowAddResult={handleShowAddResult}\n            handleEndTournament={handleEndTournament}\n          />\n        </Col>\n        <Col xs={12} sm={{ span: 3, offset: 1 }} >\n          <h4>Obstacles</h4>\n\n          <ListGroup variant='flush'>\n            {renderObstacles()}\n          </ListGroup>\n        </Col>\n        <Col xs={12} sm={{ span: 3, offset: 1 }} >\n          <h4>Players</h4>\n\n          <ListGroup variant='flush'>\n            {renderPlayers()}\n          </ListGroup>\n        </Col>\n      </Row>\n      <NinjaBanner\n        text='Results'\n        type='description'\n      />\n      <ResultsTable\n        obstacles={tournament.obstacles}\n        players={players}\n      />\n    </>\n  )\n}\n\nexport default withRouter(Tournament)","import { useResource } from '../hooks'\n\nconst resultService = useResource('/api/results')\n\nconst resultsReducer = (state = [], action) => {\n  switch (action.type) {\n  case 'GET_RESULTS':\n    return action.results\n  case 'CREATE_RESULT':\n    return [...state, action.newResult ]\n  default:\n    return state\n  }\n}\n\nexport const getAllResults = () => {\n  return async dispatch => {\n    const results = await resultService.getAll()\n\n    dispatch({\n      type: 'GET_RESULTS',\n      results\n    })\n  }\n}\n\nexport const createResult = (result) => {\n  return async dispatch => {\n    const newResult = await resultService.create(result)\n\n    dispatch({\n      type: 'CREATE_RESULT',\n      newResult\n    })\n\n    return newResult\n  }\n}\n\nexport default resultsReducer","import React, { useState } from 'react'\nimport { Modal, Form, Col } from 'react-bootstrap'\nimport { createResult } from '../reducers/resultsReducer'\nimport { updatePlayer } from '../reducers/playersReducer'\nimport { useDispatch } from 'react-redux'\nimport NinjaButton from './NinjaButton'\n\nconst AddResult = ({ show, close, players, obstacles }) => {\n  const [validated, setValidated] = useState(false)\n  const [currentPlayer, setCurrentPlayer] = useState(null)\n  const [time, setTime] = useState(0)\n  const [passedObstacles, setPassedObstacles] = useState([])\n  const dispatch = useDispatch()\n\n  if (!players) {\n    return null\n  }\n\n  const isPassed = id => passedObstacles.includes(id)\n\n  const handleRemovePassedObstacle = id =>\n    setPassedObstacles(passedObstacles.filter(o => o !== Number(id)))\n\n  const handleSetPassedObstacle = id =>\n    setPassedObstacles([...passedObstacles, id])\n\n  const handleTimeChange = event => {\n    setTime(event.target.value)\n  }\n\n  const handlePlayerChange = event => {\n    setCurrentPlayer(players.find(p => p.nickname === event.target.value))\n  }\n\n  const handleSaveResult = async (event) => {\n    event.preventDefault()\n\n    if (!event.target.checkValidity()) {\n      setValidated(true)\n      return\n    }\n\n    const player = currentPlayer ? currentPlayer : players[0]\n\n    const result = {\n      player_id: player.id,\n      time,\n      passed_obstacles: passedObstacles\n    }\n\n    try {\n      const savedResult = await dispatch(createResult(result))\n\n      const updatedPlayer = { ...player,\n        results: [...player.results, savedResult]\n      }\n\n      dispatch(updatePlayer(updatedPlayer))\n      setTime(0)\n      setCurrentPlayer(null)\n      setPassedObstacles([])\n      close()\n\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  return (\n    <Modal show={show} onHide={close} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Add result for player\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form noValidate validated={validated} onSubmit={handleSaveResult} >\n          <Form.Group >\n            <Form.Label>Select player</Form.Label>\n            <select id='players' onChange={handlePlayerChange}>\n              {players.map(p =>\n                <option key={p.id}>\n                  {p.nickname}\n                </option>\n              )}\n            </select>\n          </Form.Group>\n          <Form.Group >\n            <Form.Label>Time</Form.Label>\n            <Form.Control type='number' onChange={handleTimeChange} placeholder='Time' />\n          </Form.Group>\n          {obstacles.map(o =>\n            <Form.Group key={o.id}>\n              <Form.Check\n                type='checkbox'\n                label={o.name}\n                checked={isPassed(o.id)}\n                onChange={() => isPassed(o.id)\n                  ? handleRemovePassedObstacle(o.id)\n                  : handleSetPassedObstacle(o.id)}\n              />\n            </Form.Group>\n          )}\n          <Form.Row>\n            <Col>\n              <NinjaButton\n                text='Save result'\n              />\n            </Col>\n            <Col>\n              <NinjaButton\n                text='Cancel'\n                type='button'\n                onClick={close}\n              />\n            </Col>\n          </Form.Row>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default AddResult","import React, { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport Tournament from './Tournament'\nimport AddResult from './AddResult'\n\nconst ManageTournament = ({ tournaments }) => {\n  const [showAddResult, setShowAddResult] = useState(false)\n  const tournamentId = useParams().id\n\n  const players = useSelector(state =>\n    state.players.filter(p => p.tournament_id === Number(tournamentId))\n  )\n\n  const tournament = tournaments.find(t => t.id === Number(tournamentId))\n\n  const handleCloseAddResult = () => setShowAddResult(false)\n  const handleShowAddResult = () => setShowAddResult(true)\n\n  if (!tournament) {\n    return null\n  }\n\n  return (\n    <>\n      <Tournament\n        tournament={tournament}\n        players={players}\n        handleShowAddResult={handleShowAddResult}\n      />\n      <AddResult\n        players={players}\n        obstacles={tournament.obstacles}\n        show={showAddResult}\n        close={handleCloseAddResult}\n      />\n    </>\n  )\n}\n\nexport default ManageTournament","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport NinjaBanner from './NinjaBanner'\n\nconst About = () =>\n  <>\n    <NinjaBanner\n      text='Ninja Ranking app'\n    />\n    <Row>\n      <Col className='text-center form'>\n        <p>\n          Ninja Ranking is a web application for keeping track of\n          <a href='https://en.wikipedia.org/wiki/American_Ninja_Warrior'> Ninja Warrior</a> tournaments.\n        </p>\n\n        <p>\n          You can create Ninja Warrior tournament, add players and obstacles to it,\n          and compete with each other. This app keeps track of players performances\n          and shows some data etc.\n        </p>\n      </Col>\n    </Row>\n  </>\n\nexport default About","import React, { useEffect } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { HashLink } from 'react-router-hash-link'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setUserToState } from './reducers/loginReducer'\nimport { getAllTournaments } from './reducers/tournamentsReducer'\nimport { getAllPlayers } from './reducers/playersReducer'\nimport { Container } from 'react-bootstrap'\nimport NavigationBar from './components/NavigationBar'\nimport FrontPage from './components/FrontPage'\nimport RegisterForm from './components/RegisterForm'\nimport TournamentForm from './components/TournamentForm'\nimport Tournaments from './components/Tournaments'\nimport Footer from './components/Footer'\nimport ManageTournament from './components/ManageTournament'\nimport About from './components/About'\nimport { GoArrowUp } from 'react-icons/go'\n\nimport './App.css'\n\nconst App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    const logged = window.localStorage.getItem('loggedNinjaRankingUser')\n    if (logged) {\n      dispatch(setUserToState(JSON.parse(logged)))\n    }\n  }, [])\n\n  useEffect(() => {\n    dispatch(getAllTournaments())\n  }, [])\n\n  useEffect(() => {\n    dispatch(getAllPlayers())\n  }, [])\n\n  const loggedUser = useSelector(state => state.user)\n  const tournaments = useSelector(state => state.tournaments)\n\n  const tournamentsByLoggedUser =\n    loggedUser && tournaments.filter(t => t.account_id === loggedUser.id)\n\n  return (\n    <Container fluid>\n      <BrowserRouter>\n        <NavigationBar\n          user={loggedUser}\n        />\n\n        <Switch>\n          <Route path='/about'>\n            <About />\n          </Route>\n\n          <Route path='/register'>\n            <RegisterForm />\n          </Route>\n\n          <Route path='/tournaments/:id'>\n            <ManageTournament\n              tournaments={tournaments}\n            />\n          </Route>\n\n          <Route path='/tournaments'>\n            <Tournaments\n              tournaments={tournamentsByLoggedUser}\n            />\n          </Route>\n\n          <Route path='/tournament'>\n            <TournamentForm />\n          </Route>\n\n          <Route path='/'>\n            <FrontPage\n              user={loggedUser}\n              tournaments={tournaments}\n            />\n          </Route>\n        </Switch>\n\n        <HashLink smooth to='#top'>\n          <GoArrowUp\n            style={{ position: 'fixed', bottom: '30px', right: '30px', zIndex: '9999' }}\n          />\n        </HashLink>\n\n        <Footer/>\n      </BrowserRouter>\n    </Container>\n  )\n}\n\nexport default App\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport loginReducer from './reducers/loginReducer'\nimport accountsReducer from './reducers/accountsReducer'\nimport tournamentsReducer from './reducers/tournamentsReducer'\nimport obstaclesReducer from './reducers/obstaclesReducer'\nimport playersReducer from './reducers/playersReducer'\nimport resultsReducer from './reducers/resultsReducer'\n\nconst reducer = combineReducers({\n  user: loginReducer,\n  accounts: accountsReducer,\n  tournaments: tournamentsReducer,\n  obstacles: obstaclesReducer,\n  players: playersReducer,\n  results: resultsReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport { IconContext } from 'react-icons'\n\nimport './index.css'\n\nReactDOM.render(\n  <IconContext.Provider value={{ size: '2.5rem', color: 'rgb(54, 51, 124)' }}>\n    <Provider store={store} >\n      <App />\n    </Provider>\n  </IconContext.Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}